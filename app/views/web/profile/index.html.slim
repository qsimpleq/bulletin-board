.row
  .p-3.p-lg-5.pt-lg-0
    .mb-4
      h2 = t('.title')
      hr

    = link_to t('.add'), new_bulletin_path

    = search_form_for @q, url: request.path, method: :get do |f|
      .row.my-2
        .col-6
          = f.input :title_cont,
                  label: false,
                  hint: t('web.bulletins.search_form.search_title')
        .col-3
          .form-group.mb-3.select.required.q_state_eq
            = f.input :state_eq,
                    as: :select,
                    collection: ['', *Bulletin.states], selected: params[:q] ? params[:q][:state_eq] : nil,
                    label: false,
                    hint: t('web.bulletins.search_form.search_state')
        .col-3
          = f.submit t('action.submit_search'), class: 'btn btn-primary me-2'
          = link_to t('action.reset'), request.path, class: 'btn btn-outline-primary'

    .row.mt-2
      table[class="table table-borderless"]
        thead
          th = t('.columns.name')
          th = t('.columns.state')
          th = t('.columns.created_at')
          th = t('.columns.actions')

        tbody
          - @bulletins.each do |bulletin|
            tr
              td = bulletin.title
              td = t("aasm.states.#{bulletin.state}")
              td = time_ago_in_words(bulletin.created_at.to_time)
              td
                = link_to t('action.show'), bulletin_path(bulletin), class: 'me-2'
                = link_to t('action.edit'), edit_bulletin_path(bulletin), class: 'me-2'
                - if bulletin.may_moderate?
                  = link_to t('action.moderate'), moderate_bulletin_path(bulletin), class: 'me-2',
                          data: { turbo_method: :patch }
                - if bulletin.may_archive?
                  = link_to t('action.archive'), archive_bulletin_path(bulletin), class: 'text-danger me-2',
                          data: { turbo_method: :patch, turbo_confirm: t('.confirm_archive') }

      = paginate @bulletins
